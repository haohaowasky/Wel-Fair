"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AttestationTypeID_1 = require("./AttestationTypeID");
function getAttestationTypeStr(typeId) {
    switch (typeId) {
        case AttestationTypeID_1.AttestationTypeID.email:
            return 'email';
            break;
        case AttestationTypeID_1.AttestationTypeID.phone:
            return 'phone';
            break;
        case AttestationTypeID_1.AttestationTypeID.facebook:
            return 'facebook';
            break;
        case AttestationTypeID_1.AttestationTypeID.sanctionScreen:
            return 'sanction-screen';
            break;
        case AttestationTypeID_1.AttestationTypeID.pepScreen:
            return 'pep-screen';
            break;
        case AttestationTypeID_1.AttestationTypeID.idDocument:
            return 'id-document';
            break;
        case AttestationTypeID_1.AttestationTypeID.google:
            return 'google';
            break;
        case AttestationTypeID_1.AttestationTypeID.linkedin:
            return 'linkedin';
            break;
        case AttestationTypeID_1.AttestationTypeID.twitter:
            return 'twitter';
            break;
        case AttestationTypeID_1.AttestationTypeID.ssn:
            return 'ssn';
            break;
        case AttestationTypeID_1.AttestationTypeID.sexoffender:
            return 'sexoffender';
            break;
        case AttestationTypeID_1.AttestationTypeID.criminal:
            return 'criminal';
            break;
        case AttestationTypeID_1.AttestationTypeID.driver:
            return 'driver';
            break;
        case AttestationTypeID_1.AttestationTypeID.employment:
            return 'employment';
            break;
        default:
            throw Error("AttestationTypeID " + typeId + " not supported");
    }
}
exports.getAttestationTypeStr = getAttestationTypeStr;
function getBloomIDStrength(typeId) {
    switch (typeId) {
        case AttestationTypeID_1.AttestationTypeID.email:
            break;
        case AttestationTypeID_1.AttestationTypeID.phone:
            break;
        case AttestationTypeID_1.AttestationTypeID.facebook:
            return 5;
            break;
        case AttestationTypeID_1.AttestationTypeID.sanctionScreen:
            break;
        case AttestationTypeID_1.AttestationTypeID.pepScreen:
            return 10;
            break;
        case AttestationTypeID_1.AttestationTypeID.idDocument:
            return 20;
            break;
        case AttestationTypeID_1.AttestationTypeID.google:
            return 5;
            break;
        case AttestationTypeID_1.AttestationTypeID.linkedin:
            return 5;
            break;
        case AttestationTypeID_1.AttestationTypeID.twitter:
            return 5;
            break;
        default:
            throw Error("AttestationTypeID " + typeId + " not supported");
            break;
    }
}
exports.getBloomIDStrength = getBloomIDStrength;
function getFormattedName(typeId) {
    try {
        var attestationType = AttestationTypeID_1.AttestationTypeID[typeId.toString()];
        return AttestationTypes[attestationType].nameFriendly;
    }
    catch (_a) {
        throw Error("AttestationTypeID " + typeId + " not supported");
    }
}
exports.getFormattedName = getFormattedName;
//# sourceMappingURL=AttestationUtils.js.map