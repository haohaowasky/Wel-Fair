/// <reference types="node" />
import { Address } from '../../address';
import { EvmMemory } from '../memory';
import { Stack } from '../stack';
import { Trie } from '../trie';
import { TxSubstrate } from '../tx/tx-substrate';
import { WorldState } from '../world/world-state';
export declare class EvmContext {
    worldState: WorldState;
    code: Buffer;
    calldata: Buffer;
    origin: Address;
    caller: Address;
    executor: Address;
    value: bigint;
    gas: bigint;
    storage: Trie;
    callDepth: number;
    modify: boolean;
    txSubstrate: TxSubstrate;
    stack: Stack<bigint>;
    memory: EvmMemory;
    ip: number;
    halt: boolean;
    reverted: boolean;
    revertInstruction: number;
    returned: Buffer;
    lastReturned: Buffer;
    constructor(worldState: WorldState, code?: Buffer, calldata?: Buffer, origin?: Address, caller?: Address, executor?: Address, value?: bigint, gas?: bigint, storage?: Trie, callDepth?: number, modify?: boolean, txSubstrate?: TxSubstrate);
}
