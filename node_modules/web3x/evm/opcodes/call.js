"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const bigint_buffer_1 = require("bigint-buffer");
const address_1 = require("../../address");
const message_call_1 = require("../vm/message-call");
class CallOp {
    constructor() {
        this.code = 0xf1;
        this.mnemonic = 'CALL';
        this.description = 'Message-call into an account';
        this.gas = 0;
        this.bytes = 1;
    }
    toString(params) {
        return `${this.mnemonic}`;
    }
    async handle(context) {
        const { stack, worldState, memory, origin, executor, callDepth, modify } = context;
        const gas = stack.pop();
        const addr = stack.pop();
        const value = stack.pop();
        const inOffset = stack.pop();
        const inSize = stack.pop();
        const retOffset = stack.pop();
        const retSize = stack.pop();
        const recipient = new address_1.Address(bigint_buffer_1.toBufferBE(addr, 20));
        const calldata = memory.loadN(inOffset, Number(inSize));
        const { txSubstrate, status, returned } = await message_call_1.messageCall(worldState, executor, origin, recipient, recipient, value, gas, calldata, callDepth + 1, modify);
        if (!status) {
            context.stack.push(BigInt(0));
        }
        else {
            context.stack.push(BigInt(1));
            context.txSubstrate.logs.push(...txSubstrate.logs);
            context.memory.storeN(retOffset, returned.slice(0, Number(retSize)));
            context.lastReturned = returned;
        }
        context.ip += this.bytes;
    }
}
exports.Call = new CallOp();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ldm0vb3Bjb2Rlcy9jYWxsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsaURBQTJDO0FBRTNDLDJDQUF3QztBQUV4QyxxREFBaUQ7QUFFakQsTUFBTSxNQUFNO0lBQVo7UUFDa0IsU0FBSSxHQUFHLElBQUksQ0FBQztRQUNaLGFBQVEsR0FBRyxNQUFNLENBQUM7UUFDbEIsZ0JBQVcsR0FBRyw4QkFBOEIsQ0FBQztRQUM3QyxRQUFHLEdBQUcsQ0FBQyxDQUFDO1FBQ1IsVUFBSyxHQUFHLENBQUMsQ0FBQztJQThDNUIsQ0FBQztJQTVDUSxRQUFRLENBQUMsTUFBYztRQUM1QixPQUFPLEdBQUcsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQzVCLENBQUM7SUFFTSxLQUFLLENBQUMsTUFBTSxDQUFDLE9BQW1CO1FBQ3JDLE1BQU0sRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsR0FBRyxPQUFPLENBQUM7UUFFbkYsTUFBTSxHQUFHLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQ3hCLE1BQU0sSUFBSSxHQUFHLEtBQUssQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUN6QixNQUFNLEtBQUssR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLENBQUM7UUFDMUIsTUFBTSxRQUFRLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQzdCLE1BQU0sTUFBTSxHQUFHLEtBQUssQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUMzQixNQUFNLFNBQVMsR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLENBQUM7UUFDOUIsTUFBTSxPQUFPLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBRTVCLE1BQU0sU0FBUyxHQUFHLElBQUksaUJBQU8sQ0FBQywwQkFBVSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3BELE1BQU0sUUFBUSxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1FBRXhELE1BQU0sRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxHQUFHLE1BQU0sMEJBQVcsQ0FDekQsVUFBVSxFQUNWLFFBQVEsRUFDUixNQUFNLEVBQ04sU0FBUyxFQUNULFNBQVMsRUFDVCxLQUFLLEVBQ0wsR0FBRyxFQUNILFFBQVEsRUFDUixTQUFTLEdBQUcsQ0FBQyxFQUNiLE1BQU0sQ0FDUCxDQUFDO1FBRUYsSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUNYLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQy9CO2FBQU07WUFDTCxPQUFPLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUU5QixPQUFPLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7WUFFbkQsT0FBTyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsU0FBUyxFQUFFLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDckUsT0FBTyxDQUFDLFlBQVksR0FBRyxRQUFRLENBQUM7U0FDakM7UUFFRCxPQUFPLENBQUMsRUFBRSxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDM0IsQ0FBQztDQUNGO0FBRVksUUFBQSxJQUFJLEdBQUcsSUFBSSxNQUFNLEVBQUUsQ0FBQyJ9