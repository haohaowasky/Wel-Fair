"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const add_1 = require("./add");
const addmod_1 = require("./addmod");
const address_1 = require("./address");
const and_1 = require("./and");
const byte_1 = require("./byte");
const call_1 = require("./call");
const calldatacopy_1 = require("./calldatacopy");
const calldataload_1 = require("./calldataload");
const calldatasize_1 = require("./calldatasize");
const caller_1 = require("./caller");
const callvalue_1 = require("./callvalue");
const copycode_1 = require("./copycode");
const div_1 = require("./div");
const dup_1 = require("./dup");
const eq_1 = require("./eq");
const exp_1 = require("./exp");
const extcodesize_1 = require("./extcodesize");
const gas_1 = require("./gas");
const gt_1 = require("./gt");
const invalid_1 = require("./invalid");
const iszero_1 = require("./iszero");
const jump_1 = require("./jump");
const jumpdest_1 = require("./jumpdest");
const jumpi_1 = require("./jumpi");
const log_1 = require("./log");
const lt_1 = require("./lt");
const mload_1 = require("./mload");
const mod_1 = require("./mod");
const mstore_1 = require("./mstore");
const mul_1 = require("./mul");
const not_1 = require("./not");
const or_1 = require("./or");
const pop_1 = require("./pop");
const push_1 = require("./push");
const return_1 = require("./return");
const returndatacopy_1 = require("./returndatacopy");
const returndatasize_1 = require("./returndatasize");
const revert_1 = require("./revert");
const sgt_1 = require("./sgt");
const sha3_1 = require("./sha3");
const sload_1 = require("./sload");
const slt_1 = require("./slt");
const sstore_1 = require("./sstore");
const stop_1 = require("./stop");
const sub_1 = require("./sub");
const swap_1 = require("./swap");
const timestamp_1 = require("./timestamp");
const xor_1 = require("./xor");
const opCodes = [
    ...dup_1.DupOps,
    ...log_1.LogOps,
    ...push_1.PushOps,
    ...swap_1.SwapOps,
    add_1.Add,
    addmod_1.AddMod,
    address_1.Address,
    and_1.And,
    byte_1.Byte,
    call_1.Call,
    caller_1.Caller,
    calldatacopy_1.CallDataCopy,
    calldataload_1.CallDataLoad,
    calldatasize_1.CallDataSize,
    callvalue_1.CallValue,
    copycode_1.CopyCode,
    div_1.Div,
    eq_1.Eq,
    exp_1.Exp,
    extcodesize_1.ExtCodeSize,
    gas_1.Gas,
    gt_1.Gt,
    invalid_1.Invalid,
    iszero_1.IsZero,
    jump_1.Jump,
    jumpdest_1.JumpDest,
    jumpi_1.Jumpi,
    lt_1.Lt,
    mul_1.Mul,
    mod_1.Mod,
    or_1.Or,
    pop_1.Pop,
    sgt_1.Sgt,
    slt_1.Slt,
    timestamp_1.Timestamp,
    mload_1.Mload,
    mstore_1.Mstore,
    not_1.Not,
    return_1.Return,
    returndatacopy_1.ReturnDataCopy,
    returndatasize_1.ReturnDataSize,
    revert_1.Revert,
    sha3_1.Sha3,
    stop_1.Stop,
    sload_1.Sload,
    sstore_1.Sstore,
    sub_1.Sub,
    xor_1.Xor,
];
exports.OpCodes = opCodes.reduce((a, c) => ({ ...a, [c.code]: c }), {});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvZXZtL29wY29kZXMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSwrQkFBNEI7QUFDNUIscUNBQWtDO0FBQ2xDLHVDQUFvQztBQUNwQywrQkFBNEI7QUFDNUIsaUNBQThCO0FBQzlCLGlDQUE4QjtBQUM5QixpREFBOEM7QUFDOUMsaURBQThDO0FBQzlDLGlEQUE4QztBQUM5QyxxQ0FBa0M7QUFDbEMsMkNBQXdDO0FBQ3hDLHlDQUFzQztBQUN0QywrQkFBNEI7QUFDNUIsK0JBQStCO0FBQy9CLDZCQUEwQjtBQUMxQiwrQkFBNEI7QUFDNUIsK0NBQTRDO0FBQzVDLCtCQUE0QjtBQUM1Qiw2QkFBMEI7QUFDMUIsdUNBQW9DO0FBQ3BDLHFDQUFrQztBQUNsQyxpQ0FBOEI7QUFDOUIseUNBQXNDO0FBQ3RDLG1DQUFnQztBQUNoQywrQkFBK0I7QUFDL0IsNkJBQTBCO0FBQzFCLG1DQUFnQztBQUNoQywrQkFBNEI7QUFDNUIscUNBQWtDO0FBQ2xDLCtCQUE0QjtBQUM1QiwrQkFBNEI7QUFDNUIsNkJBQTBCO0FBQzFCLCtCQUE0QjtBQUM1QixpQ0FBaUM7QUFDakMscUNBQWtDO0FBQ2xDLHFEQUFrRDtBQUNsRCxxREFBa0Q7QUFDbEQscUNBQWtDO0FBQ2xDLCtCQUE0QjtBQUM1QixpQ0FBOEI7QUFDOUIsbUNBQWdDO0FBQ2hDLCtCQUE0QjtBQUM1QixxQ0FBa0M7QUFDbEMsaUNBQThCO0FBQzlCLCtCQUE0QjtBQUM1QixpQ0FBaUM7QUFDakMsMkNBQXdDO0FBQ3hDLCtCQUE0QjtBQWE1QixNQUFNLE9BQU8sR0FBYTtJQUN4QixHQUFHLFlBQU07SUFDVCxHQUFHLFlBQU07SUFDVCxHQUFHLGNBQU87SUFDVixHQUFHLGNBQU87SUFDVixTQUFHO0lBQ0gsZUFBTTtJQUNOLGlCQUFPO0lBQ1AsU0FBRztJQUNILFdBQUk7SUFDSixXQUFJO0lBQ0osZUFBTTtJQUNOLDJCQUFZO0lBQ1osMkJBQVk7SUFDWiwyQkFBWTtJQUNaLHFCQUFTO0lBQ1QsbUJBQVE7SUFDUixTQUFHO0lBQ0gsT0FBRTtJQUNGLFNBQUc7SUFDSCx5QkFBVztJQUNYLFNBQUc7SUFDSCxPQUFFO0lBQ0YsaUJBQU87SUFDUCxlQUFNO0lBQ04sV0FBSTtJQUNKLG1CQUFRO0lBQ1IsYUFBSztJQUNMLE9BQUU7SUFDRixTQUFHO0lBQ0gsU0FBRztJQUNILE9BQUU7SUFDRixTQUFHO0lBQ0gsU0FBRztJQUNILFNBQUc7SUFDSCxxQkFBUztJQUNULGFBQUs7SUFDTCxlQUFNO0lBQ04sU0FBRztJQUNILGVBQU07SUFDTiwrQkFBYztJQUNkLCtCQUFjO0lBQ2QsZUFBTTtJQUNOLFdBQUk7SUFDSixXQUFJO0lBQ0osYUFBSztJQUNMLGVBQU07SUFDTixTQUFHO0lBQ0gsU0FBRztDQUNKLENBQUM7QUFFVyxRQUFBLE9BQU8sR0FBK0IsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDIn0=