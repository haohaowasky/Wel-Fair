/// <reference types="node" />
import { LevelUp } from 'levelup';
import { Address } from '../../address';
import { Trie } from '../trie';
import { EvmContext } from '../vm';
export declare function EvmAccountFactory(address: Address, nonce: bigint, balance: bigint, storage: Trie, code: Buffer): EvmAccount;
export declare class EvmAccount {
    readonly address: Address;
    nonce: bigint;
    balance: bigint;
    readonly storage: Trie;
    code: Buffer;
    constructor(address: Address, nonce: bigint, balance: bigint, storage: Trie, code: Buffer);
    nextContractAddress(): Address;
    run(context: EvmContext): Promise<EvmContext>;
    isEmpty(): boolean;
}
export declare class EvmEcdsaRecoveryAccount extends EvmAccount {
    constructor(address: Address, nonce: bigint, balance: bigint, storage: Trie, code: Buffer);
    static fromDb(db: LevelUp): EvmEcdsaRecoveryAccount;
    run(callContext: EvmContext): Promise<EvmContext>;
}
