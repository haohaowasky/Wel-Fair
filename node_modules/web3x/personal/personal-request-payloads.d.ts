import { Address } from '../address';
import { Data, Quantity } from '../types';
import { Transaction } from './personal';
export declare class PersonalRequestPayloads {
    getAccounts(): {
        method: string;
        format: (result: any) => any;
    };
    newAccount(password: string): {
        method: string;
        params: string[];
        format: typeof Address.fromString;
    };
    unlockAccount(address: Address, password: string, duration: Quantity): {
        method: string;
        params: (string | Address)[];
        format: (result: any) => any;
    };
    lockAccount(address: Address): {
        method: string;
        params: Address[];
        format: (result: any) => any;
    };
    importRawKey(privateKey: Data, password: string): {
        method: string;
        params: string[];
        format: (result: any) => any;
    };
    sendTransaction(tx: Transaction, password: string): {
        method: string;
        params: (string | {
            condition: {
                block: number;
            } | {
                time: number;
            } | null | undefined;
            from: string;
            to?: string | undefined;
            gas?: string | undefined;
            gasPrice?: string | undefined;
            value?: string | undefined;
            data?: string | undefined;
            nonce?: string | undefined;
        })[];
        format: (result: any) => any;
    };
    signTransaction(tx: Transaction, password: string): {
        method: string;
        params: (string | {
            condition: {
                block: number;
            } | {
                time: number;
            } | null | undefined;
            from: string;
            to?: string | undefined;
            gas?: string | undefined;
            gasPrice?: string | undefined;
            value?: string | undefined;
            data?: string | undefined;
            nonce?: string | undefined;
        })[];
        format: (result: any) => any;
    };
    sign(data: Data, address: Address, password: string): {
        method: string;
        params: any[];
        format: (result: any) => any;
    };
    ecRecover(data: Data, signedData: Data): {
        method: string;
        params: any[];
        format: (result: any) => any;
    };
}
