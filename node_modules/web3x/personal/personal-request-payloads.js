"use strict";
/*
  This file is part of web3x.

  web3x is free software: you can redistribute it and/or modify
  it under the terms of the GNU Lesser General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  web3x is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public License
  along with web3x.  If not, see <http://www.gnu.org/licenses/>.
*/
Object.defineProperty(exports, "__esModule", { value: true });
const address_1 = require("../address");
const formatters_1 = require("../formatters");
const identity = result => result;
class PersonalRequestPayloads {
    getAccounts() {
        return {
            method: 'personalListAccounts',
            format: result => result.map(address_1.Address.fromString),
        };
    }
    newAccount(password) {
        return {
            method: 'personalListAccounts',
            params: [password],
            format: address_1.Address.fromString,
        };
    }
    unlockAccount(address, password, duration) {
        return {
            method: 'personal_unlockAccount',
            params: [address, password, duration],
            format: identity,
        };
    }
    lockAccount(address) {
        return {
            method: 'personal_lockAccount',
            params: [address],
            format: identity,
        };
    }
    importRawKey(privateKey, password) {
        return {
            method: 'personal_importRawKey',
            params: [privateKey, password],
            format: identity,
        };
    }
    sendTransaction(tx, password) {
        return {
            method: 'personal_sendTransaction',
            params: [{ ...formatters_1.toRawTransactionRequest(tx), condition: tx.condition }, password],
            format: identity,
        };
    }
    signTransaction(tx, password) {
        return {
            method: 'personal_signTransaction',
            params: [{ ...formatters_1.toRawTransactionRequest(tx), condition: tx.condition }, password],
            format: identity,
        };
    }
    sign(data, address, password) {
        return {
            method: 'personal_sign',
            params: [formatters_1.inputSignFormatter(data), address, password],
            format: identity,
        };
    }
    ecRecover(data, signedData) {
        return {
            method: 'personal_ecRecover',
            params: [formatters_1.inputSignFormatter(data), signedData],
            format: identity,
        };
    }
}
exports.PersonalRequestPayloads = PersonalRequestPayloads;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVyc29uYWwtcmVxdWVzdC1wYXlsb2Fkcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9wZXJzb25hbC9wZXJzb25hbC1yZXF1ZXN0LXBheWxvYWRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7Ozs7Ozs7O0VBZUU7O0FBRUYsd0NBQXFDO0FBQ3JDLDhDQUE0RTtBQUk1RSxNQUFNLFFBQVEsR0FBRyxNQUFNLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQztBQUVsQyxNQUFhLHVCQUF1QjtJQUMzQixXQUFXO1FBQ2hCLE9BQU87WUFDTCxNQUFNLEVBQUUsc0JBQXNCO1lBQzlCLE1BQU0sRUFBRSxNQUFNLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsaUJBQU8sQ0FBQyxVQUFVLENBQUM7U0FDakQsQ0FBQztJQUNKLENBQUM7SUFFTSxVQUFVLENBQUMsUUFBZ0I7UUFDaEMsT0FBTztZQUNMLE1BQU0sRUFBRSxzQkFBc0I7WUFDOUIsTUFBTSxFQUFFLENBQUMsUUFBUSxDQUFDO1lBQ2xCLE1BQU0sRUFBRSxpQkFBTyxDQUFDLFVBQVU7U0FDM0IsQ0FBQztJQUNKLENBQUM7SUFFTSxhQUFhLENBQUMsT0FBZ0IsRUFBRSxRQUFnQixFQUFFLFFBQWtCO1FBQ3pFLE9BQU87WUFDTCxNQUFNLEVBQUUsd0JBQXdCO1lBQ2hDLE1BQU0sRUFBRSxDQUFDLE9BQU8sRUFBRSxRQUFRLEVBQUUsUUFBUSxDQUFDO1lBQ3JDLE1BQU0sRUFBRSxRQUFRO1NBQ2pCLENBQUM7SUFDSixDQUFDO0lBRU0sV0FBVyxDQUFDLE9BQWdCO1FBQ2pDLE9BQU87WUFDTCxNQUFNLEVBQUUsc0JBQXNCO1lBQzlCLE1BQU0sRUFBRSxDQUFDLE9BQU8sQ0FBQztZQUNqQixNQUFNLEVBQUUsUUFBUTtTQUNqQixDQUFDO0lBQ0osQ0FBQztJQUVNLFlBQVksQ0FBQyxVQUFnQixFQUFFLFFBQWdCO1FBQ3BELE9BQU87WUFDTCxNQUFNLEVBQUUsdUJBQXVCO1lBQy9CLE1BQU0sRUFBRSxDQUFDLFVBQVUsRUFBRSxRQUFRLENBQUM7WUFDOUIsTUFBTSxFQUFFLFFBQVE7U0FDakIsQ0FBQztJQUNKLENBQUM7SUFFTSxlQUFlLENBQUMsRUFBZSxFQUFFLFFBQWdCO1FBQ3RELE9BQU87WUFDTCxNQUFNLEVBQUUsMEJBQTBCO1lBQ2xDLE1BQU0sRUFBRSxDQUFDLEVBQUUsR0FBRyxvQ0FBdUIsQ0FBQyxFQUFFLENBQUMsRUFBRSxTQUFTLEVBQUUsRUFBRSxDQUFDLFNBQVMsRUFBRSxFQUFFLFFBQVEsQ0FBQztZQUMvRSxNQUFNLEVBQUUsUUFBUTtTQUNqQixDQUFDO0lBQ0osQ0FBQztJQUVNLGVBQWUsQ0FBQyxFQUFlLEVBQUUsUUFBZ0I7UUFDdEQsT0FBTztZQUNMLE1BQU0sRUFBRSwwQkFBMEI7WUFDbEMsTUFBTSxFQUFFLENBQUMsRUFBRSxHQUFHLG9DQUF1QixDQUFDLEVBQUUsQ0FBQyxFQUFFLFNBQVMsRUFBRSxFQUFFLENBQUMsU0FBUyxFQUFFLEVBQUUsUUFBUSxDQUFDO1lBQy9FLE1BQU0sRUFBRSxRQUFRO1NBQ2pCLENBQUM7SUFDSixDQUFDO0lBRU0sSUFBSSxDQUFDLElBQVUsRUFBRSxPQUFnQixFQUFFLFFBQWdCO1FBQ3hELE9BQU87WUFDTCxNQUFNLEVBQUUsZUFBZTtZQUN2QixNQUFNLEVBQUUsQ0FBQywrQkFBa0IsQ0FBQyxJQUFJLENBQUMsRUFBRSxPQUFPLEVBQUUsUUFBUSxDQUFDO1lBQ3JELE1BQU0sRUFBRSxRQUFRO1NBQ2pCLENBQUM7SUFDSixDQUFDO0lBRU0sU0FBUyxDQUFDLElBQVUsRUFBRSxVQUFnQjtRQUMzQyxPQUFPO1lBQ0wsTUFBTSxFQUFFLG9CQUFvQjtZQUM1QixNQUFNLEVBQUUsQ0FBQywrQkFBa0IsQ0FBQyxJQUFJLENBQUMsRUFBRSxVQUFVLENBQUM7WUFDOUMsTUFBTSxFQUFFLFFBQVE7U0FDakIsQ0FBQztJQUNKLENBQUM7Q0FDRjtBQXZFRCwwREF1RUMifQ==